1 $> git clone https://github.com/lahuman/CentOS-Dockerfiles/tree/master/mariadb/centos7 

독커 이미지 생성 진행 
--rm 이미지 생성 성공시 컨테이너를 제거 
-t 이미지에 대한 이름 설정 
1 $> docker build --rm -t <yourname>/mariadb . 

DATA VOLUME CONTAINER 생성 ? 최초 한번만 생성 
--name 컨테이너 명 설정 
-v 연결할 값 설정 
1 $> docker run --name=mariadb-data -v /var/lib/mysql <yourname>/mariadb true 

MariaDB 초기 설정 ? 최초 한번만 생성 
--volumes-form 설정된 컨테이너의 볼륨과 연결 
1 $> docker run -rm --volumes-from=mariadb-data <yourname>/mariadb /config_mariadb.sh 

MariaDB 컨테이너 생성 ? ** 이 컨테이너에 대하여 START/STOP 처리 ** 
-d 백그라운드로 실행 
-p host_port:container_port 연결 
1 $> docker run --name=mariadb -d -p 3306:3306 --volumes-from=mariadb-data <yourname>/mariadb 

연결 테스트 
123 $> docker exec -it mariadb-doc4sm /bin/bash #> /usr/bin/mysql -uroot -p mysql 


--------------------------------------------------------------------------------

TOMCAT 서버 구축 & DBMS 연동 
준비사항 
JDK 1.8 
TOMCAT 8 
docker에서 tar.gz 파일을 복사할 경우 압축이 풀린 상태로 표출 되는 버그가 있어 압축을 풀고 해당 디렉토리에 대한 복사를 추천한다. 

docker 이미지 생성 
Dockerfile 
12345678910111213141516171819 FROM centos:centos7 MAINTAINER LAHUMAN <lahuman1@gmail.com>   RUN yum -y update; yum clean all RUN yum -y install epel-release tar ; yum clean all   ADD apache-tomcat-8.0.21 /usr/local/apache-tomcat-8.0.21 ADD jdk1.8.0_40 /usr/local/jdk1.8.0_40   ADD server.xml /usr/local/apache-tomcat-8.0.21/conf/server.xml   ENV JAVA_HOME /usr/local/jdk1.8.0_40   RUN mkdir /data  EXPOSE 8080 EXPOSE 8009   VOLUME /data 

이미지 생성 
1 docker build --rm -t <image name> . 

컨테이너 생성 & 기동 
-h 컨테이너 호스트 이름 설정 
--mac-address 맥 주소 설정 
--link 연결할 컨테이너명:내부에서 사용할 명칭 
-v host path:container path 를 연결 
-t 허위 TTY 허용 
-i 상호작용 설정
> -it 옵션을 이용하여야 /bin/bash 를 이용하는데 문제가 없음 
123 $> docker run --name doc4sm1 -h lahuman --mac-address 02-42-AC-11-00-62 --link mariadb-doc4sm:mariadb -d -it -v /home/docker/doc4sm/data:/data  --privileged=true  lahuman/doc4sm:centos7 /usr/local/apache-tomcat-8.0.21/bin/catalina.sh run   $> docker run --name doc4sm2 -h lahuman --mac-address 02-42-AC-11-00-62 --link mariadb-doc4sm:mariadb -d -it -v /home/docker/doc4sm/data:/data  --privileged=true  lahuman/doc4sm:centos7 /usr/local/apache-tomcat-8.0.21/bin/catalina.sh run 


--------------------------------------------------------------------------------

NGINX 서버 구축 & TOMCAT 연동 
준비사항
Dockerfile 
FROM centos:centos7 MAINTAINER The CentOS Project <cloud-ops@centos.org>   RUN yum -y update; yum clean all RUN yum -y install epel-release tar ; yum clean all RUN yum -y install nginx ; yum clean all ADD nginx.conf /etc/nginx/nginx.conf RUN echo "daemon off;" >> /etc/nginx/nginx.conf RUN curl https://git.centos.org/sources/httpd/c7/acf5cccf4afaecf3afeb18c50ae59fd5c6504910     | tar -xz -C /usr/share/nginx/html     --strip-components=1 RUN sed -i -e 's/Apache/nginx/g' -e '/apache_pb.gif/d'     /usr/share/nginx/html/index.html   RUN mkdir /webapp  EXPOSE 80   VOLUME /webapp  CMD [ "/usr/sbin/nginx" ] 

이미지 생성 
nginx 설정 변경 
#doc4sm upstream doc4sm_servers{     ip_hash;     server doc4sm1:8080;     server doc4sm2:8080; } server {     listen  80;     server_name doc4sm.lahuman.pe.kr;     location / {             proxy_pass http://doc4sm_servers;     } } 

정말 간단하게 2대의 톰켓 was를 load balancer 한다. 

이미지 생성 명령어 
1 docker build -rm -t lahuman/home:centos7 . 

컨테이너 생성 & 기동 
1 docker run --name lahuman --link doc4sm1:doc4sm1 --link doc4sm2:doc4sm2 -d -p 80:80 -v /home/docker/lahuman.pe.kr/webapp:/webapp  --privileged=true  lahuman/home:centos7 
