Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

C:\Users\user>
C:\Users\user>
C:\Users\user>
C:\Users\user>docker-machine create --driver virtualbox myvm1
Running pre-create checks...
Creating machine...
(myvm1) Copying C:\Users\user\.docker\machine\cache\boot2docker.iso to C:\Users\
user\.docker\machine\machines\myvm1\boot2docker.iso...
(myvm1) Creating VirtualBox VM...
(myvm1) Creating SSH key...
(myvm1) Starting the VM...
(myvm1) Check network to re-create if needed...
(myvm1) Windows might ask for the permission to configure a dhcp server. Sometim
es, such confirmation window is minimized in the taskbar.
Error creating machine: Error in driver during machine creation: Error setting u
p host only network on machine start: C:\Program Files\Oracle\VirtualBox\VBoxMan
age.exe dhcpserver add --netname HostInterfaceNetworking-VirtualBox Host-Only Et
hernet Adapter #4 --ip 192.168.99.6 --netmask 255.255.255.0 --lowerip 192.168.99
.100 --upperip 192.168.99.254 --enable failed:
VBoxManage.exe: error: DHCP server already exists


C:\Users\user>docker-machine create --driver virtualbox myvm2
Running pre-create checks...
Creating machine...
(myvm2) Copying C:\Users\user\.docker\machine\cache\boot2docker.iso to C:\Users\
user\.docker\machine\machines\myvm2\boot2docker.iso...
(myvm2) Creating VirtualBox VM...
(myvm2) Creating SSH key...
(myvm2) Starting the VM...
(myvm2) Check network to re-create if needed...
(myvm2) Waiting for an IP...
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with boot2docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this vi
rtual machine, run: docker-machine env myvm2

C:\Users\user>docker-machine create --driver virtualbox myvm1
Host already exists: "myvm1"

C:\Users\user>docker-machine create --driver virtualbox myvm1
Host already exists: "myvm1"

C:\Users\user>docker-machine create --driver virtualbox myvm3
Running pre-create checks...
Creating machine...
(myvm3) Copying C:\Users\user\.docker\machine\cache\boot2docker.iso to C:\Users\
user\.docker\machine\machines\myvm3\boot2docker.iso...
(myvm3) Creating VirtualBox VM...
(myvm3) Creating SSH key...
(myvm3) Starting the VM...
(myvm3) Check network to re-create if needed...
(myvm3) Waiting for an IP...
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with boot2docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this vi
rtual machine, run: docker-machine env myvm3



C:\Users\user>docker-machine ssh myvm2 "docker swarm init"
Error response from daemon: could not choose an IP address to advertise since th
is system has multiple addresses on different interfaces (10.0.2.15 on eth0 and
192.168.99.100 on eth1) - specify one with --advertise-addr

C:\Users\user>docker-machine ssh myvm2 "docker swarm init --advertise-addr=192.1
68.99.100"
Swarm initialized: current node (kw3ao2lges4spit64nejzy24t) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join \
    --token SWMTKN-1-3wfs4qvjqtqm9i6fl8kchu2s27e5ln8v2856s52s9e7paskcg4-7259ztge
93g96s4bjvw6sqdtr \
    192.168.99.100:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow
 the instructions.


C:\Users\user>docker-machine ssh myvm3 "docker swarm join --token SWMTKN-1-3wfs4
qvjqtqm9i6fl8kchu2s27e5ln8v2856s52s9e7paskcg4-7259ztge93g96s4bjvw6sqdtr 192.168.
99.100:2377"
This node joined a swarm as a worker.

